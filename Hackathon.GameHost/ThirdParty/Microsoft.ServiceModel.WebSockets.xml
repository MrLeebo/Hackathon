<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ServiceModel.WebSockets</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ServiceModel.Channels.HttpRequestParser">
            <summary>
            Dedicated HTTP Upgrade Request parser which only can handle HTTP Upgrade requests. By overriding <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeRequest"/>
            you can control which Upgrade requests the parser can accept as well as the shape of the HTTP Upgrade response.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpRequestParser.#ctor(System.Int32,System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.HttpRequestParser"/> class.
            </summary>
            <param name="maximumHeaderLength">Maximum length of HTTP header.</param>
            <param name="prefix">URI prefix, e.g. "http://host:8080", indicating the root URI used for matching Host header against.</param>
            <param name="serverToken">Product token used in HTTP response.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpRequestParser.ParseRequest(System.Byte[],System.Int32,System.Int32@,Microsoft.ServiceModel.Channels.HttpUpgradeRequest,Microsoft.ServiceModel.Channels.HttpUpgradeResponse@)">
            <summary>
            Parse an HTTP upgrade request and generate an HTTP response. Bytes are parsed in a consuming
            manner from the beginning of the request buffer meaning that the same bytes can not be 
            present in the request buffer.
            </summary>
            <param name="buffer">Request buffer from where request is read</param>
            <param name="bytesReady">Size of request buffer</param>
            <param name="bytesConsumed">Offset into request buffer</param>
            <param name="upgradeRequest">Request to fill in and validate whether it is indeed an Upgrade request.</param>
            <param name="upgradeResponse">Response created when HttpParseStatus is not HttpParseStatus.NeedMoreData.</param>
            <returns>State of the parser.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpRequestParser.MaximumHeaderLength">
            <summary>
            Gets the maximum length of HTTP header.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpRequestParser.ServerToken">
            <summary>
            Gets the product token used in HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpRequestParser.UriPrefix">
            <summary>
            Gets the URI prefix to evaluate Request URI against.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.Channels.HttpRequestParser.State">
            <summary>
            Represents the overall state of the <see cref="T:Microsoft.ServiceModel.Channels.HttpRequestParser"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ServiceModel.Channels.HttpRequestParser.State.NeedMoreData">
            <summary>
            Need more data
            </summary>
        </member>
        <member name="F:Microsoft.ServiceModel.Channels.HttpRequestParser.State.Done">
            <summary>
            Parsing done
            </summary>
        </member>
        <member name="F:Microsoft.ServiceModel.Channels.HttpRequestParser.State.Invalid">
            <summary>
            Bad data format
            </summary>
        </member>
        <member name="F:Microsoft.ServiceModel.Channels.HttpRequestParser.State.DataTooBig">
            <summary>
            Data exceeds the allowed size
            </summary>
        </member>
        <member name="F:Microsoft.ServiceModel.Channels.HttpRequestParser.State.NotFound">
            <summary>
            Request is a valid HTTP Upgrade request but request URI is unknown
            </summary>
        </member>
        <member name="F:Microsoft.ServiceModel.Channels.HttpRequestParser.State.NotUpgradeRequest">
            <summary>
            Request is a valid HTTP request but not an Upgrade request
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.Channels.HttpUpgradeException">
            <summary>
            Exception thrown by <see cref="T:Microsoft.ServiceModel.Channels.HttpRequestParser"/> upon parsing an invalid or non-Upgrade HTTP request.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeException.#ctor(Microsoft.ServiceModel.Channels.HttpUpgradeResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeException"/> class.
            </summary>
            <param name="httpResponse">HTTP Response associated with this exception.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeException"/> class with a 
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
             Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeException.HttpResponse">
            <summary>
            Gets the HTTP Upgrade response for this exception
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.Channels.HttpUpgradeHeaderCollection">
            <summary>
            Provides a version of the <see cref="T:System.Net.WebHeaderCollection"/> class that allows known header 
            fields to be added directly rather than accessed through dedicated accessors.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeHeaderCollection.AddHeaderField(System.String,System.String)">
            <summary>
            Inserts a header into the collection without checking whether the header is on the restricted header list.
            </summary>
            <param name="name">The header to add to the collection.</param>
            <param name="value">The content of the header.</param>
        </member>
        <member name="T:Microsoft.ServiceModel.Channels.HttpUpgradeRequest">
            <summary>
            Default implementation of an HTTP Upgrade request. The request validates that the request
            contains the proper Upgrade header fields but does not validate the specific Upgrade tokens.
            By overriding this class you can control which Upgrade requests to accepts as well as the 
            shape of the HTTP Upgrade response.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.TryCreateRequestUri(System.Uri)">
            <summary>
            Try create the request URI using the URI prefix as base. The value is assigned to the 
            <see cref="P:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.RequestUri"/> property.
            </summary>
            <param name="prefix">URI prefix to use as base.</param>
            <returns>true if request URI is created successfully; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.TryCreateRequestUri(System.Uri,System.Uri@)">
            <summary>
            Try create the request URI using the URI prefix as base. 
            </summary>
            <param name="prefix">URI prefix to use as base.</param>
            <param name="requestUri">Resulting request URI.</param>
            <returns>true if request URI is created successfully; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.TryValidateUpgradeRequest">
            <summary>
            Try validate the HTTP Request.
            </summary>
            <returns>true if request is validated; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.CreateUpgradeResponse(Microsoft.ServiceModel.Channels.HttpRequestParser.State,System.String)">
            <summary>
            Create an HTTP response for this HTTP request.
            </summary>
            <param name="status">Status of the HTTP response.</param>
            <param name="serverToken">Server token to use for creating the Server HTTP header.</param>
            <returns>An HttpUpgradeResponse instance.</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.RequestUri">
            <summary>
            Gets the parsed request URI for this request.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.RequestMethod">
            <summary>
            Gets the request method for this request.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.RawRequestUriString">
            <summary>
            Gets the unparsed request URI for this request.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.RequestVersionToken">
            <summary>
            Gets the token segment of the HTTP request version number of this request.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.RequestMajorVersion">
            <summary>
            Gets the major version number of thie request.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.RequestMinorVersion">
            <summary>
            Gets the minor version number of thie request.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeRequest.RequestHeaderCollection">
            <summary>
            Gets the request header collection.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.Channels.HttpUpgradeResponse">
            <summary>
            Default implementation of an HTTP Upgrade response. It generates a response based on the 
            HTTP status code. An <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeResponse"/> instance is created from the 
            <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeRequest"/>. Override both classed to control the generation of the response.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeResponse.#ctor(Microsoft.ServiceModel.Channels.HttpRequestParser.State,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeResponse"/> class based on the HTTP status, the server
            token and the upgrade token.
            </summary>
            <param name="parseStatus">HTTP parse status.</param>
            <param name="serverToken">The server token to use in the Server HTTP header field.</param>
            <param name="upgradeToken">The upgrade token to include in the HTTP response as the accepted token.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.HttpUpgradeResponse.WriteTo(System.Byte[],System.Int32@)">
            <summary>
            Writes the HTTP response to a buffer.
            </summary>
            <param name="buffer">Buffer to write response to.</param>
            <param name="bytesWritten">The index at which to start writing the resulting sequence of bytes. The index is updated to 
            reflect the number of bytes written.</param>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeResponse.ResponseDescription">
            <summary>
            Gets or sets the HTTP response status description.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeResponse.ResponseHeaderCollection">
            <summary>
            Gets the HTTP response header collection.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.HttpUpgradeResponse.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.Channels.WebSocketsBindingElement">
            <summary>
            A <see cref="T:System.ServiceModel.Channels.BindingElement"/> used to configure endpoints for WebSockets services.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.WebSocketsBindingElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.WebSocketsBindingElement"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.WebSocketsBindingElement.#ctor(Microsoft.ServiceModel.Channels.WebSocketsBindingElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.Channels.WebSocketsBindingElement"/> class by cloning the 
            provided <see cref="T:Microsoft.ServiceModel.Channels.WebSocketsBindingElement"/> instance.
            </summary>
            <param name="other">Instance to clone.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.WebSocketsBindingElement.Clone">
            <summary>
            Provides a clone of the current <see cref="T:Microsoft.ServiceModel.Channels.WebSocketsBindingElement"/> instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceModel.Channels.WebSocketsHttpUpgradeRequest">
            <summary>
            Version of the <see cref="T:Microsoft.ServiceModel.Channels.HttpUpgradeRequest"/> supporting WebSockets.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.WebSocketsHttpUpgradeRequest.TryValidateUpgradeRequest">
            <summary>
            Try validate the HTTP WebSockets Upgrade request.
            </summary>
            <returns>true if request is validated; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.WebSocketsHttpUpgradeRequest.CreateUpgradeResponse(Microsoft.ServiceModel.Channels.HttpRequestParser.State,System.String)">
            <summary>
            Create an HTTP WebSockets response for this HTTP request.
            </summary>
            <param name="status">Status of the HTTP response.</param>
            <param name="serverToken">Server token to use for creating the Server HTTP header.</param>
            <returns>An HttpUpgradeResponse instance.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.Channels.WebSocketsHttpUpgradeRequest.ComputeServerAccept">
            <summary>
            Computes the value of Sec-WebSocket-Accept header field in the server's upgrade response
            </summary>
            <returns>The value of Sec-WebSocket-Accept field</returns>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsHttpUpgradeRequest.Origin">
            <summary>
            Gets the Sec-WebSocket-Origin HTTP header field.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsHttpUpgradeRequest.ClientKey">
            <summary>
            Gets the base64-encoded Sec-WebSocket-Key HTTP header field.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsHttpUpgradeRequest.Protocol">
            <summary>
            Gets the Sec-WebSocket-Protocol HTTP header field.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.Channels.WebSocketsResult">
            <summary>
            Contains the result of parsing an WebSocket segment.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsResult.MessageFinal">
            <summary>
            Gets a value indicating whether the message is final
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsResult.MessageOpcode">
            <summary>
            Gets the message opcode
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsResult.MessageLength">
            <summary>
            Gets the message length
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsResult.MessageContent">
            <summary>
            Gets or sets the WebSockets message if present in the segment.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsResult.HasMessageEnd">
            <summary>
            Gets or sets a value indicating whether the closing message has been received.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsResult.IsMasked">
            <summary>
            Gets a value indicating whether the payload data is masked
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsResult.MaskingKey">
            <summary>
            Gets the masking key if the payload data is masked.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.Channels.WebSocketsTcpFramingChannelCallbacks.SendTimeout">
            <summary>
            Gets the default send timeout
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.WebSockets.BinaryValueFormatter">
            <summary>
            A WCF formatter used by <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.BinaryValueFormatter.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.WebSockets.BinaryValueFormatter"/> class.
            </summary>
            <param name="action">The action associated with the operation for which this is the formatter.</param>
            <param name="encode">Indicates whether the binary data represents UTF8-encoded string.</param>
            <param name="useIsFinalHeader">Indicates whether the formatter should use IsFinal header.</param>
        </member>
        <member name="T:Microsoft.ServiceModel.WebSockets.IWebSockets">
            <summary>
            Uniform interface for all WebSocket services
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.IWebSockets.OnMessage(System.String)">
            <summary>
            Receive a text message from the other party.
            </summary>
            <param name="value">Received message.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.IWebSockets.OnMessage(System.Byte[])">
            <summary>
            Receive a binary message from the other party.
            </summary>
            <param name="data">Received message.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.IWebSockets.OnFragment(System.Boolean,System.String)">
            <summary>
            Receive a text message fragment from the other party.
            </summary>
            <param name="final">Indicates whether the fragment is final for the current message.</param>
            <param name="value">Received fragment.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.IWebSockets.OnFragment(System.Boolean,System.Byte[])">
            <summary>
            Receive a binary message fragment from the other party.
            </summary>
            <param name="final">Indicates whether the fragment is final for the current message.</param>
            <param name="data">Received fragment.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.IWebSockets.OnPing(System.Byte[])">
            <summary>
            Receive a ping message from the other party.
            </summary>
            <param name="data">Received payload.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.IWebSockets.OnPong(System.Byte[])">
            <summary>
            Receive a pong message from the other party.
            </summary>
            <param name="data">Received payload.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.IWebSockets.OnOpen">
            <summary>
            Session is open for communication.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.WebSockets.ByteStreamMessageHelper">
            <summary>
            Helper class for creating byte stream message instances.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.ByteStreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Byte[])">
            <summary>
            Initialize a new instance byte stream message.
            </summary>
            <param name="version">A <see cref="T:System.ServiceModel.Channels.MessageVersion"/> object that specifies the SOAP version to use for the message.</param>
            <param name="action">A description of how the message should be processed.</param>
            <param name="content">The actual content of the message.</param>
            <returns>The message instance.</returns>
        </member>
        <member name="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1">
            <summary>
            Provides a host for services of type <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsService"/>.
            </summary>
            <typeparam name="T">Type of service to host.</typeparam>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.#ctor(System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1"/> class with default settings.
            </summary>
            <param name="baseAddresses">An array of type <see cref="T:System.Uri"/> that contains the base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.#ctor(System.ServiceModel.Description.ServiceThrottlingBehavior,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1"/> class with the given 
            service throttling behavior.
            </summary>
            <param name="throttles">Service throttling behavior to use with this <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1"/> instance.</param>
            <param name="baseAddresses">An array of type <see cref="T:System.Uri"/> that contains the base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.AddWebSocketsEndpoint">
            <summary>
            Adds a default WebSockets endpoint to the hosted service
            </summary>
            <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> added to the hosted service.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.AddWebSocketsEndpoint(System.String)">
            <summary>
            Adds a WebSockets endpoint to the hosted service with a specified endpoint address.
            </summary>
            <param name="address">The address for the endpoint added. This can be an absolute or relative URI. 
            If it is a relative URI, one of the base address of the <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1"/> (depending on the binding protocol)
            is used as the endpoint's base address.</param>
            <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> added to the hosted service.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.AddWebSocketsEndpoint(System.String,System.Uri)">
            <summary>
            Adds a WebSockets endpoint to the hosted service with a specified endpoint address and a URI on which the service listens.
            </summary>
            <param name="address">The address for the endpoint added. This can be an absolute or relative URI. 
            If it is a relative URI, one of the base address of the <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1"/> (depending on the binding protocol)
            is used as the endpoint's base address.</param>
            <param name="listenUri">The <see cref="T:System.Uri"/> on which the service endpoints can listen.</param>
            <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> added to the hosted service.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.AddWebSocketsEndpoint(Microsoft.ServiceModel.Channels.WebSocketsBindingElement)">
            <summary>
            Adds a WebSockets endpoint to the hosted service with a specified binding.
            </summary>
            <param name="binding">The <see cref="T:Microsoft.ServiceModel.Channels.WebSocketsBindingElement"/> for the endpoint added.</param>
            <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> added to the hosted service.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.AddWebSocketsEndpoint(Microsoft.ServiceModel.Channels.WebSocketsBindingElement,System.String)">
            <summary>
            Adds a WebSockets endpoint to the hosted service with a specified binding and endpoint address.
            </summary>
            <param name="binding">The <see cref="T:Microsoft.ServiceModel.Channels.WebSocketsBindingElement"/> for the endpoint added.</param>
            <param name="address">The address for the endpoint added. This can be an absolute or relative URI. 
            If it is a relative URI, one of the base address of the <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1"/> (depending on the binding protocol)
            is used as the endpoint's base address.</param>
            <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> added to the hosted service.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.AddWebSocketsEndpoint(Microsoft.ServiceModel.Channels.WebSocketsBindingElement,System.String,System.Uri)">
            <summary>
            Adds a WebSockets endpoint to the hosted service with a specified binding and endpoint address.
            </summary>
            <param name="binding">The <see cref="T:Microsoft.ServiceModel.Channels.WebSocketsBindingElement"/> for the endpoint added.</param>
            <param name="address">The address for the endpoint added. This can be an absolute or relative URI. 
            If it is a relative URI, one of the base address of the <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1"/> (depending on the binding protocol)
            is used as the endpoint's base address.</param>
            <param name="listenUri">The <see cref="T:System.Uri"/> on which the service endpoints can listen.</param>
            <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> added to the hosted service.</returns>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsHost`1.OnOpening">
            <summary>
            Invoked during the transition of a communication object into the opening state.
            </summary>
        </member>
        <member name="T:Microsoft.ServiceModel.WebSockets.WebSocketsService">
            <summary>
            Provides a base class for WebSocket service implementations.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsService"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.ServiceModel.WebSockets.WebSocketsService"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.Dispose">
            <summary>
            Disposes the instance.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnOpen">
            <summary>
            Called when the WebSockets session is established.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnMessage(System.String)">
            <summary>
            Called when a message arrives 
            </summary>
            <param name="value">Incoming message.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnMessage(System.Byte[])">
            <summary>
            Called when a message arrives 
            </summary>
            <param name="data">Incoming message.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnFragment(System.Boolean,System.String)">
            <summary>
            Called when a message fragment arrives 
            </summary>
            <param name="final">Indicates whether the fragment is final for the current message.</param>
            <param name="value">Incoming message.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnFragment(System.Boolean,System.Byte[])">
            <summary>
            Called when a message fragment arrives 
            </summary>
            <param name="final">Indicates whether the fragment is final for the current message.</param>
            <param name="data">Incoming message.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnPing(System.Byte[])">
            <summary>
            Called when a ping message arrives from the other party
            </summary>
            <param name="data">Incoming payload.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnPong(System.Byte[])">
            <summary>
            Called when a pong message arrives from the other party
            </summary>
            <param name="data">Incoming payload.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.SendMessage(System.String)">
            <summary>
            Sends a message to the other party of this WebSockets session.
            </summary>
            <param name="value">Message to send.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.SendMessage(System.Byte[])">
            <summary>
            Sends a message to the other party of this WebSockets session.
            </summary>
            <param name="data">Message to send.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.SendFragment(System.Boolean,System.String)">
            <summary>
            Sends a message fragment to the other party of this WebSockets session.
            </summary>
            <param name="final">Indicates whether the fragment is final for the current message.</param>
            <param name="value">Message fragment to send.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.SendFragment(System.Boolean,System.Byte[])">
            <summary>
            Sends a message fragment to the other party of this WebSockets session.
            </summary>
            <param name="final">Indicates whether the fragment is final for the current message.</param>
            <param name="data">Message fragment to send.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.Ping(System.Byte[])">
            <summary>
            Sends a ping message to the other party of this WebSockets session.
            </summary>
            <param name="data">Payload to send.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.Close">
            <summary>
            Closes the WebSockets session.
            </summary>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnError(System.Object,System.EventArgs)">
            <summary>
            Occurs when the communication object first enters the faulted state.  
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An EventArgs that contains no event data.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.OnClose(System.Object,System.EventArgs)">
            <summary>
            Occurs when the communication object first enters the closing state. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An EventArgs that contains no event data.</param>
        </member>
        <member name="M:Microsoft.ServiceModel.WebSockets.WebSocketsService.Dispose(System.Boolean)">
            <summary>
            Disposes the instance.
            </summary>
            <param name="disposing">True is using the Dispose method, False if this object was garbage collected without disposing first.</param>
        </member>
        <member name="P:Microsoft.ServiceModel.WebSockets.WebSocketsService.HttpRequestUri">
            <summary>
            Gets the URI of the HTTP request that initiated the WebSockets session.
            </summary>
        </member>
        <member name="P:Microsoft.ServiceModel.WebSockets.WebSocketsService.HttpRequestHeaders">
            <summary>
            Gets the HTTP request headers of the HTTP request that initiated the WebSockets session.
            </summary>
        </member>
    </members>
</doc>
